# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets, uic
import threading as par
import time
import imageio
import numpy as np



class LightCurveSimThread(QtCore.QThread):
    """
    For Internal Use only. 

    Class extending a Qt QThread class. Provides methods for interfacing with the physics engine.
    Enables all calculations to be ran on a separate thread so as to not freeze the GUI.


    PARAMETERS
    ----------

    engine : Engine
        Instance that the SimThread controls
    canvas : QLabel or Matplotlib plot
        Canvas owned by the thread. This is the canas that images generated by the engine are drawn to.
        Default Value: None
    canvasType : CanvasType
        Enum specifying if the canvas is a QLabel-based canvas or a Matplotlib-based canvas.
        DefaultValue: CanvasType.NONE_TYPE

    ATTRIBUTES
    ----------

    canvas : The canvas passed in either upon initialization of with the setCanvas method.

    engine : The engine instance passed in upon initialization of the SimThread instance.


    METHODS
    -------

    setCanvas

    """
    def __init__(self,canvas = None,engine = None,progressBar = None, progressLabel = None):
        QtCore.QThread.__init__(self)
        self.canvas = canvas
        # self.canvas.hide()
        self.__calculating = False
        self.engine = engine
        self.progressBar = progressBar
        self.progressLabel = progressLabel

    def updateParameters(self,params):
        self.engine.updateParameters(params)

    def setLightCurveLimits(self,mmin,mmax):
        self.__mmin = mmin
        self.__mmax = mmax

    def run(self):
        self.__calculating = True
        self.progressLabel.setText("Calculating. Please Wait")
        x,y = self.engine.makeLightCurve(self.__mmin,self.__mmax,progressBar = self.progressBar)
        self.canvas.plot(x,y)
        self.progressLabel.setText("Done")
        self.progressBar.setValue(0)
